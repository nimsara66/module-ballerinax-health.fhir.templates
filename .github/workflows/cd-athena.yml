name: CD Athena

on:
  workflow_dispatch:
    inputs:
      bal_central_environment:
        description: Ballerina Central Environment
        type: choice
        options:
        - STAGE
        - DEV
        - PROD
        required: true

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: -Xmx4G
    steps:
      - uses: actions/checkout@v3

      - name: Ballerina Build Athena
        uses: ballerina-platform/ballerina-action@2201.5.0
        with:
          args:
            pack
        env:
          WORKING_DIR: ./r4/athena
          JAVA_HOME: /usr/lib/jvm/default-jvm

      - name: Push to Staging Athena
        if: github.event.inputs.bal_central_environment == 'STAGE'
        uses: ballerina-platform/ballerina-action/@2201.5.0
        with:
          args:
            push
        env:
          WORKING_DIR: ./r4/athena
          JAVA_HOME: /usr/lib/jvm/default-jvm
          BALLERINA_STAGE_CENTRAL: true
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_STAGE_ACCESS_TOKEN }}

      - name: Push to Dev Athena
        if: github.event.inputs.bal_central_environment == 'DEV'
        uses: ballerina-platform/ballerina-action/@2201.5.0
        with:
          args:
            push
        env:
          WORKING_DIR: ./r4/athena
          JAVA_HOME: /usr/lib/jvm/default-jvm
          BALLERINA_DEV_CENTRAL: true
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_DEV_ACCESS_TOKEN }}      

      # - name: Push to Prod Athena
      #   if: github.event.inputs.bal_central_environment == 'PROD'
      #   uses: ballerina-platform/ballerina-action/@2201.5.0
      #   with:
      #     args:
      #       push
      #   env:
      #     WORKING_DIR: ./r4/athena
      #     JAVA_HOME: /usr/lib/jvm/default-jvm
      #     BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_PROD_ACCESS_TOKEN }}

      - name: Get Branch Name
        if: github.event.inputs.bal_central_environment == 'PROD'
        id: branch_name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

      - name: Create Tag
        if: github.event.inputs.bal_central_environment == 'PROD'
        id: create_tag
        run: echo "TAG=$(echo v${{ steps.branch_name.outputs.BRANCH_NAME }})" >> $GITHUB_OUTPUT

      - name: Publish Release
        if: github.event.inputs.bal_central_environment == 'PROD'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.TAG }}
          release_name: Release ${{ steps.create_tag.outputs.TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        
